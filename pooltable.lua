local pooltable = {}pooltable.valpool	= {}pooltable.excluded	= {}--[[valpool = {1, 2, 3, 4, 5, 6, 7, 8, 9}]]--[[ Gives values ]]function pooltable:values(...)	pooltable.valpool = {...}end--[[creates a new pooltable]]--Not sure about viability of this methodfunction pooltable:new(...)	tab = table.copy(self)	tab:values(...)	tab.new = nilend--[[ ]]function pooltable:giveValue(exclusions)	if exclusions then		tab = {}		tab = table.copy(self.valpool)	return endend--[[ UTILITY ]]function table.copy(tab)	tbl = {}	for k, v in pairs(tab) do		if type(v) == "table" then 			tbl[k] = table.copy(v) --recursion ho!		else			tbl[k] = v		end	end	return tblendlocal function fullTable()	return { 1, 2, 3, 4, 5, 6, 7, 8, 9 }end